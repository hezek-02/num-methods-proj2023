## PARTE 4 ##

d = 0.0001;
c = 299792.458;

S = [133, 347, 26567, 0;
     24214, -7393, 8061, 0;
     -25087, -5690, 6651, 0;
     -24025, 2219, 11129, 0;
     -10347, -16476, 18096, 0;
     4948, 19967, 16816, 0;
     -6251, 25465, 4291, 0;
     -13410, -21235, 8673, 0];
y = [0,0,6370,0.0001];
R = zeros(1,4);
t  = zeros (1,4);
for i=1:4
    R(1,i) = sqrt( S(i,1).^2 + S(i,2).^2 + (S(i,3) - 6370).^2 );
    t(1,i) = d + R(1,i) / c; %tiempo de transmisión de cada satelite
    S(i,4) = t(1,i);
endfor

F = [
        sqrt((x(1) - S(1,1)).^2  +  (x(2) - S(1,2)).^2   + (x(3) - S(1,3)).^2)   -   c * (S(1,4) - d) ;
        sqrt((x(1) - S(2,1)).^2  +  (x(2) - S(2,2)).^2   + (x(3) - S(2,3)).^2)   -   c * (S(2,4) - d) ;
        sqrt((x(1) - S(3,1)).^2  +  (x(2) - S(3,2)).^2   + (x(3) - S(3,3)).^2)   -   c * (S(3,4) - d) ;
        sqrt((x(1) - S(4,1)).^2  +  (x(2) - S(4,2)).^2   + (x(3) - S(4,3)).^2)   -   c * (S(4,4) - d) ;
        sqrt((x(1) - S(5,1)).^2  +  (x(2) - S(5,2)).^2   + (x(3) - S(5,3)).^2)   -   c * (S(5,4) - d) ;
        sqrt((x(1) - S(6,1)).^2  +  (x(2) - S(6,2)).^2   + (x(3) - S(6,3)).^2)   -   c * (S(6,4) - d) ;
        sqrt((x(1) - S(7,1)).^2  +  (x(2) - S(7,2)).^2   + (x(3) - S(7,3)).^2)   -   c * (S(7,4) - d) ;
        sqrt((x(1) - S(8,1)).^2  +  (x(2) - S(8,2)).^2   + (x(3) - S(8,3)).^2)   -   c * (S(8,4) - d) ;
    ]
    
JF = [
      (x(1)-S(1,1))/sqrt((x(1) - S(1,1)).^2 + (x(2) - S(1,2)).^2 + (x(3) - S(1,3)).^2),      (x(2)-S(1,2))/sqrt((x(1) - S(1,1)).^2 + (x(2) - S(1,2)).^2 + (x(3) - S(1,3)).^2),        (x(3)-S(1,3))/sqrt((x(1) - S(1,1)).^2 + (x(2) - S(1,2)).^2 + (x(3) - S(1,3)).^2);
      (x(1)-S(2,1))/sqrt((x(1) - S(2,1)).^2 + (x(2) - S(2,2)).^2 + (x(3) - S(2,3)).^2),      (x(2)-S(2,2))/sqrt((x(1) - S(2,1)).^2 + (x(2) - S(2,2)).^2 + (x(3) - S(2,3)).^2),        (x(3)-S(2,3))/sqrt((x(1) - S(2,1)).^2 + (x(2) - S(2,2)).^2 + (x(3) - S(2,3)).^2);
      (x(1)-S(3,1))/sqrt((x(1) - S(3,1)).^2 + (x(2) - S(3,2)).^2 + (x(3) - S(3,3)).^2),      (x(2)-S(3,2))/sqrt((x(1) - S(3,1)).^2 + (x(2) - S(3,2)).^2 + (x(3) - S(3,3)).^2),        (x(3)-S(3,3))/sqrt((x(1) - S(3,1)).^2 + (x(2) - S(3,2)).^2 + (x(3) - S(3,3)).^2);
      (x(1)-S(4,1))/sqrt((x(1) - S(4,1)).^2 + (x(2) - S(4,2)).^2 + (x(3) - S(4,3)).^2),      (x(2)-S(4,2))/sqrt((x(1) - S(4,1)).^2 + (x(2) - S(4,2)).^2 + (x(3) - S(4,3)).^2),        (x(3)-S(4,3))/sqrt((x(1) - S(4,1)).^2 + (x(2) - S(4,2)).^2 + (x(3) - S(4,3)).^2);
      (x(1)-S(5,1))/sqrt((x(1) - S(5,1)).^2 + (x(2) - S(5,2)).^2 + (x(3) - S(5,3)).^2),      (x(2)-S(5,2))/sqrt((x(1) - S(5,1)).^2 + (x(2) - S(5,2)).^2 + (x(3) - S(5,3)).^2),        (x(3)-S(5,3))/sqrt((x(1) - S(5,1)).^2 + (x(2) - S(5,2)).^2 + (x(3) - S(5,3)).^2);
      (x(1)-S(6,1))/sqrt((x(1) - S(6,1)).^2 + (x(2) - S(6,2)).^2 + (x(3) - S(6,3)).^2),      (x(2)-S(6,2))/sqrt((x(1) - S(6,1)).^2 + (x(2) - S(6,2)).^2 + (x(3) - S(6,3)).^2),        (x(3)-S(6,3))/sqrt((x(1) - S(6,1)).^2 + (x(2) - S(6,2)).^2 + (x(3) - S(6,3)).^2);
      (x(1)-S(7,1))/sqrt((x(1) - S(7,1)).^2 + (x(2) - S(7,2)).^2 + (x(3) - S(7,3)).^2),      (x(2)-S(7,2))/sqrt((x(1) - S(7,1)).^2 + (x(2) - S(7,2)).^2 + (x(3) - S(7,3)).^2),        (x(3)-S(7,3))/sqrt((x(1) - S(7,1)).^2 + (x(2) - S(7,2)).^2 + (x(3) - S(7,3)).^2);
      (x(1)-S(8,1))/sqrt((x(1) - S(8,1)).^2 + (x(2) - S(8,2)).^2 + (x(3) - S(8,3)).^2),      (x(2)-S(8,2))/sqrt((x(1) - S(8,1)).^2 + (x(2) - S(8,2)).^2 + (x(3) - S(8,3)).^2),        (x(3)-S(8,3))/sqrt((x(1) - S(8,1)).^2 + (x(2) - S(8,2)).^2 + (x(3) - S(8,3)).^2);
    ];

%punto inicial para iteración Gauss-Newton
x0 = [0,0,3670,0];

%empleamos Gauss-Newton
[res2,k2] = gauss_newton(x0,y, JF, F, 1e-9, 50);




function [x,k] = gauss_newton(x0,y,JF,F,tol,itMax)
  x = x0;
  k = 0;
  dif = inf;
  while (k<itMax) && (dif > tol)
      r = y' - F
      [U,S,V] = svd(JF);
      z = U'*((-1)*r);
      w = S(1:3,1:3) \ z;
      dif = V*w;
      x = x + dif
      k = k+1;
  endwhile
